社团新生培养计划
1.社团接下来发展模式，主要为布置编程题目，通过大家的积极程度和完成情况和印象给大家打分，
   中间良好印象的维度包括有三个方向：
 i.良好的基础和编程基础
 ii.积极的态度，正确的提问方式
 iii.影响力程度（愿意主动为大家分享自己的思考过程）
     对于认为任务太难同学，能够积极的提供自己寻找办法的路径和思考的办法，也会留下较好的印象。一般是通过个人问题答疑，以及统一讲解解题思路，在过程中锻炼大家的自学能力，以及学会提问的能力。
2.任务的主要方向：
 i.编程思维和基础，可运用于C语言考试，后期的代码调试
 ii.具体的语言技术，如Python
 iii.机器学习图片处理技术如Kmeans
 iv.深度学习相关内容如Pytorch深度学习
3.任务方式：
     完成任务后，发送代码，代码运行截图，题目思考思路到邮箱4797136@qq.com中
     任务为基础任务1，基础任务2为必须完成，对于进阶思考题，能够完成易留下比较好的印象，
对于实践题目，是想锻炼大家使用Python过程中快速调包，能够以工程角度完成比较有意思的题目，以培养兴趣，推荐大家完成，但并不强求。
     截止日期为10.1日，发送邮件总比不发好，参与到其中是最重要的。
     会在截止日期前后分享一下任务正解
     
第一次任务list
基础任务1：
1.有一本书叫做《黑客与画家》，有艺术哲学技术混为一起的浪漫，但你有没有想过在现有的知识水平下用代码也能作画，那么我们就用C语言来做我们的第一幅画，用C语言打印一个纯正的圆形
进阶思考题1：
1.如果你已经知道如何打印一个圆形了，那么如何快速打印出三个圆形（分享下思路）
2.那么假如让你调整三个大小不一的圆形，你有什么办法嘛（分享下思路）
3.搜寻一个Python类似的绘图软件，注意画的不是图表，而是圆形，三角形类的图形。（给出对应的软件，有兴趣的可以自己动手画画）
基础任务2：
1.毕哥拉斯学派说世界的本源是数，要我说基础编程的本源是循环，判断，函数，所以呢，C语言已经学到循环判断函数的同学，我希望你可以用Python打印出9*9乘法表并封装为一个函数。
进阶任务1：
1.尝试着用<=2行打印出乘法表，提示：列表生成器
自学实践任务3：（趣味编程福利局）
1.观看指定教程，并跟随完成操作
 50行代码实现Python 实现图片转字符画
 https://www.lanqiao.cn/courses/370
 
 第二次任务list
工欲利其事，必先利其器
任务一：安装conda，jupyter notebook,pycharm
进阶任务一：用conda装pytorch，并导入pytorch包，利用pytorch，构建两个矩阵，利用pytorch实现两个矩阵的相乘

有一个英语词汇叫做Handy，讲的是便利的，易使用的，当你有一个良好的环境配置时候，编程将变得handy，随手打开即可编程，一点都不复杂，所以配置好的环境，是未来学习快速进步的必要保障。

任务二：使用opencv查看旋转图片
进阶任务二：利用opencv批量更改图片的尺寸大小并输出

opencv可以算是代码编程中的P图鼻祖，希望大家学习之后能够从数据和矩阵的角度来看待编程。

任务三：用pytorch跑通一个手写数字识别系统
只要跑通就好，不要搞清楚原理
我知道第一次接触pytorch的你，肯定会有很多不理解，但是没关系，这实际上是最快的学习方式之一，在敲代码过程中，他们会进入你的潜意识，未来你会发现所有的复杂模型其实离不开手写数字模型这样的一个简单框架，潜意识中的被动思考也会推动你们在未来某个时刻顿悟。

有位哲人曾经说过：一个民族有一群仰望星空的人,他们才有希望
那么我希望各位也能尝试去仰望星空
思考题：
1.你认为学习一门新的编程语言是如何去学的，主要学习哪几个部分，怎么样快速学习，尤其是在视频，文字资料很多的情况下应当如何抉择？是不是要把一本书看完了才能去写第一行代码。
2.你认为Python为什么会有list,dict,tuple,set这些东西，有没有想过他们是怎么实现的，可以先了解他们是干什么的，然后具体百度实现原理，也可以单单说出你的猜想（不要求很细）？
       i.为什么他能存各种东西，而不止于简单的数字？
       ii.为什么集合能够进行并交集运算，为什么list能排序，为什么list不用指定长度？
3.解释一下编辑器，编译器，IDE三者的关系
4.解释下为什么会有转移字符/,\
注意：思考题没有正确的答案

任务提交细则：
1.提供conda，jupyternotebook运行截图（也可以不提交）
2.提供pytorch计算截图
3.查阅opencv相关包，提供opencv的代码，过程可以百度
4.手写数字识别系统，可以直接自己找寻代码，并跑通

参考资料：
conda-pycharm-pytorch环境配置安装教程：
Python小白必看，非常生动的Pycharm与Anaconda安装教学，干货！_哔哩哔哩_bilibili
Win10下Conda-Pycharm-Pytorch的安装_哔哩哔哩_bilibili
PyTorch深度学习快速入门教程（绝对通俗易懂！）【小土堆】_哔哩哔哩_bilibili
opencv相关资料：
python OpenCV使用 - -零 - 博客园
Pytoch手写数字：
03-1 轻松学 PyTorch 手写字体识别 MNIST (理论)_哔哩哔哩_bilibili
03-2 轻松学 PyTorch 手写字体识别 MNIST ( 实战 - 上 )_哔哩哔哩_bilibili
03-3 轻松学 PyTorch 手写字体识别 MNIST (实战 - 下)_哔哩哔哩_bilibili
pytorch系统入门教程：《PyTorch深度学习实践》完结合集_哔哩哔哩_bilibili
注意：我找的教程只是根据我的学习经验看起来还可以的，但不是the best的
如果觉得不适应的话，可以自己寻找的属于自己的the best

推荐阅读材料
1.交大生存指南（一些人文和对于未来思考的建议，可看可不看）：https://survivesjtu.gitbook.io/survivesjtumanual/
2.【公开课】最新斯坦福李飞飞cs231n计算机视觉课程【附中文字幕】_哔哩哔哩_bilibili
对于有志加入视觉相关实验室的同学可以提前看起来，能够对计算机视觉领域和深度学习之间有比较系统的认识。
3. 《深入浅出神经网络与深度学习》（如果不懂深度学习是什么东西，可以先看一下这本书，基本了解一下即  可）；

TIPs:
截止时间：10.17日

三、学习原则：
1.建议保持至少一半时间在实操，一半时间在学理论知识，比例未必正确的，但是强调实操和反馈的重要性
2.切记勿要过度深度遍历知识，知识无尽的，如果深度钻研下去，可能没有尽头，最重要的是框架，以及高频次用的知识
  对于学到的知识 一定要注重实践 不能只学习理论知识
  例如学习Pytorch，应该尽快理解Pytorch编程的框架，dataloder，model，train，test文件
  例如学习学习过程中学习到Linux命令，不是需要把整本Liunx书籍全部看完后才可使用
3.敢于否定，如果对于给出的学习资料看不懂，要尝试自己寻找学习资料，找到适合自己的那份学习资料
4.询问问题的时候，能够提出具体的问题，并能先给出自己的思考，自己做出的努力，以及目前的困惑
  例如卷积是什么？
  可以这样问应该是说我查了下卷积，说是表示信息融合，表示的是过去的信号能够对现代的信号造成    影响，但这和图像领域的卷积我完全发现不了有什么联系？来表示对回答者的尊重
  对于：怎么样学习英语，怎么样学习深度学习，或者卷积在Pytorch怎么写，这些过细或者过大的问题在自己的思考后，就很难问出来了。
  提问的艺术：https://bbs.csdn.net/topics/390307835
  PS：对于代码的提问，建议截全报错，截全代码，代码的错误一般比较难找，请求他人debug是一件极其耗费精力的事情。
5.框架意识，学习任何知识一定要有框架意识，否则容易陷入细节之中，迷茫找不到相关意义和方向。
6.Python课程并非需全部浏览
（版权源自周晓飞实验课题组培养方案，此处作为引用)
